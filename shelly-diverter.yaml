esphome:
  name: shelly-diverter

esp8266:
  board: esp01_1m

# Enable logging
logger:
  level: VERBOSE #makes uart stream available in esphome logstream
  baud_rate: 0 #disable logging over uartE
  tx_buffer_size : 4000

# Enable Home Assistant API
api:
  encryption:
    key: "<PKEY>="

ota:
  - platform: esphome
    password: "<PASSWORD>"

wifi:
  networks:
  - ssid: !secret wifi_fb_ssid
    password: !secret wifi_fb_password
  - ssid: !secret wifi_ext_ssid
    password: !secret wifi_ext_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Shelly-Diverter Fallback Hotspot"
    password: "<PASSWORD>"

captive_portal:

json:

uart:
  id: diverterUART
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 9600
  rx_buffer_size: 4000
  debug:
    direction: RX
    dummy_receiver: true
    after:
      #delimiter: "\r\n"
      bytes: 2000
    sequence:
      - lambda: |-
          UARTDebug::log_string(direction, bytes);
          std::string str(bytes.begin(), bytes.end());
          json::parse_json(str.c_str(), [](JsonObject root) -> bool {
              if (root["real_power_watt"] && root["triac1_diverted_energy_wh"]) {
                  if((root["real_power_watt"] >= -1000)&&(root["real_power_watt"] <= 10000)){id(vaill1).publish_state(root["real_power_watt"]);}
                  id(vaill2).publish_state(root["triac1_diverted_energy_wh"]);
                  return true;
              }
              else {
                return false;
              }
          });

switch:
  - platform: uart
    name: "diverter_getJSON"
    data: "DIVERTER_GETJSON\n"
    send_every: 30s
    restore_mode: "ALWAYS_ON"
  - platform: uart
    id: diverter_marche_force_on
    internal: true
    name: "diverter_marche_force_on"
    data: "001_TRIAC_REQUEST_ON\n"
    send_every: 40s
  - platform: uart
    internal: true
    id : diverter_marche_force_off
    name: "diverter_marche_force_off"
    data: "002_TRIAC_REQUEST_OFF\n"

  - platform: template
    name: "ECS_marche_force"
    optimistic: true
    turn_on_action:
      then:
        - switch.turn_on: diverter_marche_force_on
    turn_off_action:
      then:
        - switch.turn_off: diverter_marche_force_on
        - delay: 1s
        - switch.turn_on: diverter_marche_force_off

sensor:
  - platform: template
    id: vaill1
    name: "In/Out power"
    unit_of_measurement: "W"

  - platform: template
    id: vaill2
    name: "triac1_diverted_energy"
    device_class: "energy"
    state_class: "total_increasing"
    unit_of_measurement: "Wh"
